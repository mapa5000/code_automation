# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# EOR_automation.py
# Created on: 2021-11-14
# Company: CenterPoint Energy
# Department: GIS/CAD
# Description: Excel Automation
# Created by: MPortillo 
# ---------------------------------------------------------------------------

print ("Starting")
print('...importing modules...')
from datetime import datetime
start_time = datetime.now()

import pandas as pd 
import openpyxl 
import shutil
import os

curr_dir = os.getcwd()
os.chdir(curr_dir)

for dir in os.listdir():
    if os.path.isdir(dir):
        shutil.rmtree(dir)
        print("...{} folder removed from directory succesfully".format(dir))


os.mkdir('facet_container')
os.mkdir('valve_off')
os.mkdir('re_light')
print('...folders already created...')

print('...extracting data...')

if os.path.isfile("data.xls"):
    path = "data.xls"
elif os.path.isfile("data.xlsx"):
    path = "data.xlsx"
elif os.path.isfile("Data.xls"):
    path = "Data.xls"
elif os.path.isfile("Data.xlsx"):
    path = "Data.xlsx"
else:
    print('...data not found...')


#reading df
print('...creating dataframe...')
dataframe = pd.read_excel(path)


#######################################################################################################
#                                                                                                     #
#                                                                                                     #
#                       PLEASE, VERIFY FIELD NAMES BEFORE RUNNING SCRIPT                              #
#                                                                                                     #
#                                                                                                     #
#######################################################################################################

#creating columns for df
dataframe['House'] = dataframe['AddNum'].astype(str).map(lambda x:x.split('.')[0])
dataframe['Mtr_Ser_No'] = dataframe['Mtr_Ser_No'].astype(str).map(lambda x:x.split('.')[0])
dataframe['Full_name'] = dataframe['Last_Name']+', '+dataframe['First_Name']
dataframe['Full_add'] = dataframe['StName']+', '+dataframe['StType']
df = dataframe[['House','Full_add','Full_name', 'Loc','FACET_NAME','City','Mtr_Ser_No','ERT_Ser_No']]
print('...dataframe created...')

#sorting values 1)facet 2)last name
df.sort_values(by=['FACET_NAME','Full_name'])

print('...creating unique values...')

#creating files from facet unique values
split_values = df['FACET_NAME'].unique()

dfs = []
values=[]
for value in split_values: 
    df1 = df[df['FACET_NAME']==value] 
    dfs.append(df1)
    values.append(value)

print('...creating lists...')
sheets = []
sheetmax = 20
book = 0;

for  dfi in dfs:
    i = 0;
    sh = 1
    df_empty_list=[]

    df_empty = pd.DataFrame({})
    for idx in dfi.index:
        i = i + 1
        entry = df.loc[[idx]]
        
        df_empty=df_empty.append([entry] )
        if ((i % sheetmax)==0 or (i == len(dfi))):
            sh= sh + 1   
            df_empty_list.append(df_empty)
            df_empty = pd.DataFrame({})

    writer = pd.ExcelWriter(r'facet_container/FACET_'+str(values[book])+'.xlsx', engine='xlsxwriter')   
    sh = 1   

    for dfj in df_empty_list:
        dfj.to_excel(writer, sheet_name='Sheet'+str(sh))
        sh = sh + 1

    writer.save()
    book = book + 1 

os.chdir(r"facet_container/")
os.getcwd()
os.listdir()

# iterating on excel facet list
list_wb = os.listdir()
# iterating on excel facet list
list_wb = os.listdir()


##############################################################################################################################################################
#                                                                                                                                                            #
#                                                                                                                                                            #
#                                                                   VALVE OFF DATA CREATION                                                                  #
#                                                                                                                                                            #
#                                                                                                                                                            #
##############################################################################################################################################################

print('...valve off data creation...')
print('...creating workbooks and worksheets...')

re_light_template = r"../valve_off_template.xlsx"
wb_re_light_template = openpyxl.load_workbook(re_light_template)

for wb in list_wb:
    if ".xls" in wb:
        wb_obj = openpyxl.load_workbook(wb)
        sheetIdx = 0
        newPath = r"../valve_off/" + wb
        wb_re_light_template.save(newPath)
        wb_new = openpyxl.load_workbook(newPath)
        source = wb_new.active


        # iterating between worksheets in each workbook
        for sheet in wb_obj.worksheets:
            sheetIdx = sheetIdx  + 1

            customer_fullname_row = []
            street_name_row = []
            street_number_row = []
            side_row = []
            Mtr_Ser_No_row = []
            ERT_Ser_No_row = []

            
            for irow in range(20):
                #print('irow :' + str(irow))
                customer_fullname_row.append( sheet.cell(row = irow + 2,   column = 4))
                street_name_row.append(  sheet.cell(row = irow + 2,  column = 3))
                street_number_row.append(sheet.cell(row = irow + 2,  column = 2))
                side_row.append(sheet.cell(row = irow + 2,  column = 5))
                Mtr_Ser_No_row.append(sheet.cell(row = irow + 2,  column = 8))
                ERT_Ser_No_row.append(sheet.cell(row = irow + 2,  column = 9))
                

            if sheetIdx == 1:
                sheet_re_light_template  = source
            else:
                sheet_re_light_template = wb_new.copy_worksheet(source)
                sheet_re_light_template.title = "Sheet" + str(sheetIdx)    
                
            for irow in range(20):            
                sheet_re_light_template['B' + str(irow + 5 )].value  = customer_fullname_row[irow].value
                sheet_re_light_template['D' + str(irow + 5 )].value  = street_name_row[irow].value
                sheet_re_light_template['C' + str(irow + 5 )].value  = street_number_row[irow].value
                sheet_re_light_template['F' + str(irow + 5 )].value  = side_row[irow].value
                sheet_re_light_template['G' + str(irow + 5 )].value  = Mtr_Ser_No_row[irow].value
                sheet_re_light_template['H' + str(irow + 5 )].value  = ERT_Ser_No_row[irow].value
            sheet_re_light_template['E1']  = sheet['F2'].value
            sheet_re_light_template['I1']  = sheet['G2'].value
            sheet_number = sheet_re_light_template.title[5:]
            total_number = len(wb_obj.worksheets)
            numeration = '{} of {}'.format(sheet_number,total_number)
            sheet_re_light_template['N1'].value = numeration

        wb_new.save(newPath)


##############################################################################################################################################################
#                                                                                                                                                            #
#                                                                                                                                                            #
#                                                                    RE-LIGHT DATA CREATION                                                                  #
#                                                                                                                                                            #
#                                                                                                                                                            #
##############################################################################################################################################################


print('...re-light data creation...')
print('...creating workbooks and worksheets...')

re_light_template = r"../re_light_template.xlsx"
wb_re_light_template = openpyxl.load_workbook(re_light_template)


os.chdir(r"../facet_container/")

for wb in list_wb:
    if ".xls" in wb:
        wb_obj = openpyxl.load_workbook(wb)
        sheetIdx = 0
        newPath = r"../re_light/" + wb
        wb_re_light_template.save(newPath)
        wb_new = openpyxl.load_workbook(newPath)
        source = wb_new.active


        # iterating between worksheets in each workbook
        for sheet in wb_obj.worksheets:
            sheetIdx = sheetIdx  + 1

            customer_fullname_row = []
            street_name_row = []
            street_number_row = []
            side_row = []
            Mtr_Ser_No_row = []
            ERT_Ser_No_row = []

            
            for irow in range(20):
                #print('irow :' + str(irow))
                customer_fullname_row.append( sheet.cell(row = irow + 2,   column = 4))
                street_name_row.append(  sheet.cell(row = irow + 2,  column = 3))
                street_number_row.append(sheet.cell(row = irow + 2,  column = 2))
                side_row.append(sheet.cell(row = irow + 2,  column = 5))
                Mtr_Ser_No_row.append(sheet.cell(row = irow + 2,  column = 8))
                ERT_Ser_No_row.append(sheet.cell(row = irow + 2,  column = 9))
                

            if sheetIdx == 1:
                sheet_re_light_template  = source
            else:
                sheet_re_light_template = wb_new.copy_worksheet(source)
                sheet_re_light_template.title = "Sheet" + str(sheetIdx)    
                
            for irow in range(20):            
                sheet_re_light_template['B' + str(irow + 5 )].value  = customer_fullname_row[irow].value
                sheet_re_light_template['D' + str(irow + 5 )].value  = street_name_row[irow].value
                sheet_re_light_template['C' + str(irow + 5 )].value  = street_number_row[irow].value
                sheet_re_light_template['F' + str(irow + 5 )].value  = side_row[irow].value
                sheet_re_light_template['G' + str(irow + 5 )].value  = Mtr_Ser_No_row[irow].value
                sheet_re_light_template['H' + str(irow + 5 )].value  = ERT_Ser_No_row[irow].value
            sheet_re_light_template['E1']  = sheet['F2'].value
            sheet_re_light_template['I1']  = sheet['G2'].value
            sheet_number = sheet_re_light_template.title[5:]
            total_number = len(wb_obj.worksheets)
            numeration = '{} of {}'.format(sheet_number,total_number)
            sheet_re_light_template['N1'].value = numeration

        wb_new.save(newPath)



print('...page index created...')



#############################################################################
################     FINISHING SCRIPT    ####################################
#############################################################################

print('...')
print('...')
print('...')
print('script finished')

end_time = datetime.now()
execution_time = end_time - start_time
print('\n')
print(f"(Executed in: {execution_time} sec)")
